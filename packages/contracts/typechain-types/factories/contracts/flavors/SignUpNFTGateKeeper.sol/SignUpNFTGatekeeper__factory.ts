/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SignUpNFTGatekeeper,
  SignUpNFTGatekeeperInterface,
} from "../../../../contracts/flavors/SignUpNFTGateKeeper.sol/SignUpNFTGatekeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC1155",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getVoiceCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maci",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract ERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_maci",
        type: "address",
      },
    ],
    name: "setMaciInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161074638038061074683398101604081905261002f916100b1565b61003833610061565b600380546001600160a01b0319166001600160a01b0393909316929092179091556001556100eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c457600080fd5b82516001600160a01b03811681146100db57600080fd5b6020939093015192949293505050565b61064c806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806313e65cf31461007d57806324b8fbf61461009257806334a0922c146100a557806347ccca02146100d5578063715018a6146100e85780638da5cb5b146100f0578063b36543a9146100f8578063f2fde38b1461011c575b600080fd5b61009061008b366004610504565b61012f565b005b6100906100a036600461053c565b610159565b6002546100b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546100b8906001600160a01b031681565b61009061039d565b6100b86103b1565b61010e61010636600461053c565b505060015490565b6040519081526020016100cc565b61009061012a366004610504565b6103c0565b610137610439565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146101f15760405162461bcd60e51b815260206004820152604a60248201527f5369676e5570546f6b656e476174656b65657065723a206f6e6c79207370656360448201527f6966696564204d41434920696e7374616e63652063616e2063616c6c207468696064820152693990333ab731ba34b7b760b11b608482015260a4015b60405180910390fd5b60008180602001905181019061020791906105fd565b600354604051627eeac760e11b81526001600160a01b038681166004830152602482018490529293506001929091169062fdd58e90604401602060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028091906105fd565b10156102ee5760405162461bcd60e51b815260206004820152603760248201527f5369676e5570546f6b656e476174656b65657065723a20746869732075736572604482015276103237b2b9903737ba1037bbb7103a3432903a37b5b2b760491b60648201526084016101e8565b60008181526004602052604090205460ff16801561037f5760405162461bcd60e51b815260206004820152604260248201527f5369676e5570546f6b656e476174656b65657065723a207468697320746f6b6560448201527f6e2068617320616c7265616479206265656e207573656420746f207369676e20606482015261075760f41b608482015260a4016101e8565b506000908152600460205260409020805460ff191660011790555050565b6103a5610439565b6103af6000610498565b565b6000546001600160a01b031690565b6103c8610439565b6001600160a01b03811661042d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e8565b61043681610498565b50565b336104426103b1565b6001600160a01b0316146103af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104ff57600080fd5b919050565b60006020828403121561051657600080fd5b61051f826104e8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561054f57600080fd5b610558836104e8565b915060208301356001600160401b038082111561057457600080fd5b818501915085601f83011261058857600080fd5b81358181111561059a5761059a610526565b604051601f8201601f19908116603f011681019083821181831017156105c2576105c2610526565b816040528281528860208487010111156105db57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561060f57600080fd5b505191905056fea26469706673582212204ed1a96802c8cf9a64905e48368fe5c6e90006a5d8c68a14197d4737843d672264736f6c634300080a0033";

type SignUpNFTGatekeeperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignUpNFTGatekeeperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignUpNFTGatekeeper__factory extends ContractFactory {
  constructor(...args: SignUpNFTGatekeeperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _balance: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SignUpNFTGatekeeper> {
    return super.deploy(
      _token,
      _balance,
      overrides || {}
    ) as Promise<SignUpNFTGatekeeper>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _balance: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _balance, overrides || {});
  }
  override attach(address: string): SignUpNFTGatekeeper {
    return super.attach(address) as SignUpNFTGatekeeper;
  }
  override connect(signer: Signer): SignUpNFTGatekeeper__factory {
    return super.connect(signer) as SignUpNFTGatekeeper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignUpNFTGatekeeperInterface {
    return new utils.Interface(_abi) as SignUpNFTGatekeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignUpNFTGatekeeper {
    return new Contract(address, _abi, signerOrProvider) as SignUpNFTGatekeeper;
  }
}
